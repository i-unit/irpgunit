      /* =================================================================== */
      /*  iRPGUnit - Build and run all self and acp. tests.                  */
      /*                                                                     */
      /*  Usage: CALL MKRPGUNITT TARGETLIB                                   */
      /*    where TARGETLIB is the library containing the RPGUnit            */
      /*    source files.                                                    */
      /* =================================================================== */
      /* >>PRE-COMPILER<<                                                    */
      /*   >>CRTCMD<< CRTBNDCL     PGM(&LI/&OB) +                            */
      /*                           SRCFILE(&SL/&SF) +                        */
      /*                           SRCMBR(&SM);                              */
      /*   >>COMPILE<<                                                       */
      /*     >>PARM<< DBGVIEW(*LIST);                                        */
      /*     >>PARM<< OPTION(*EVENTF);                                       */
      /*   >>END-COMPILE<<                                                   */
      /*   >>EXECUTE<<                                                       */
      /* >>END-PRE-COMPILER<<                                                */
      /* =================================================================== */
             PGM        PARM(&TARGETLIB &I_DBGVIEW &I_TGTRLS)

             DCL        VAR(&TARGETLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&I_DBGVIEW) TYPE(*CHAR) LEN(10)
             DCL        VAR(&I_TGTRLS ) TYPE(*CHAR) LEN(10)

             DCL        VAR(&DBGVIEW  ) TYPE(*CHAR) LEN(10) VALUE('*LIST')
             DCL        VAR(&TGTRLS   ) TYPE(*CHAR) LEN(10) VALUE(*CURRENT)

             /* Was the failure event seen? */
             DCL        VAR(&FAILSEEN) TYPE(*CHAR) LEN(2) VALUE('KO')

             CHGVAR     VAR(&DBGVIEW) VALUE(&I_DBGVIEW)
             MONMSG     MSGID(MCH3601) EXEC(DO)
                RMVMSG     PGMQ(*SAME (*)) CLEAR(*ALL)
             ENDDO

             CHGVAR     VAR(&TGTRLS) VALUE(&I_TGTRLS)
             MONMSG     MSGID(MCH3601) EXEC(DO)
                RMVMSG     PGMQ(*SAME (*)) CLEAR(*ALL)
             ENDDO

             CHGVAR     VAR(&TARGETLIB) VALUE(&TARGETLIB)
             MONMSG     MSGID(MCH3601) EXEC(SNDPGMMSG MSGID(CPF9898) +
                          MSGF(QCPFMSG) MSGDTA('Target library +
                          parameter required.') MSGTYPE(*ESCAPE))

             CHGVAR     VAR(&TARGETLIB) VALUE(&TARGETLIB)
             MONMSG     MSGID(MCH3601) EXEC(SNDPGMMSG MSGID(CPF9898) +
                          MSGF(QCPFMSG) MSGDTA('Target library +
                          parameter required.') MSGTYPE(*ESCAPE))

             /* Sanity Check. */

             RUCRTTST   TSTPGM(QTEMP/TESTPGM03) SRCFILE(QTESTCASES)
             RUCALLTST  TSTPGM(QTEMP/TESTPGM03)
             MONMSG     MSGID(CPF0000) EXEC(CHGVAR VAR(&FAILSEEN) +
                          VALUE('OK'))
             IF         COND(&FAILSEEN *NE 'OK') THEN(SNDPGMMSG +
                          MSGID(CPF9898) MSGF(QCPFMSG) +
                          MSGDTA('Assertion failure sanity check +
                          failed') MSGTYPE(*ESCAPE))

             /* Unit Tests. */

             CRTBNDCL   PGM(QTEMP/MKUT) SRCFILE(QUNITTEST)
             CALL       PGM(QTEMP/MKUT) PARM(&TARGETLIB)

             /* Acceptance Tests. */

             CRTBNDCL   PGM(QTEMP/MKACPTST) SRCFILE(QUNITTEST)
             CALL       PGM(QTEMP/MKACPTST) PARM(&TARGETLIB)
             RUCALLTST  TSTPGM(&TARGETLIB/ACPTST)

             ENDPGM
